#.1639. Number of Ways to Form a Target String Given a Dictionary.


class Solution {
    public int numWays(String[] words, String target) {
        int MOD = 1_000_000_007;
        int m = target.length();
        int n = words[0].length();

        // Frequency count for each character at each position in words
        int[][] freq = new int[26][n];
        for (String word : words) {
            for (int j = 0; j < n; j++) {
                freq[word.charAt(j) - 'a'][j]++;
            }
        }

        // DP array: dp[i][j] represents the number of ways to form the first i characters of target using the first j columns of words
        long[] dp = new long[m + 1];
        dp[0] = 1; // Base case: 1 way to form an empty target

        for (int j = 0; j < n; j++) {
            // Traverse the target from right to left to prevent overwriting results in dp array
            for (int i = m - 1; i >= 0; i--) {
                // If the current character of target can be formed at position j
                char c = target.charAt(i);
                dp[i + 1] += dp[i] * freq[c - 'a'][j];
                dp[i + 1] %= MOD; // Take modulo to avoid overflow
            }
        }

        return (int) dp[m];
    }
}
